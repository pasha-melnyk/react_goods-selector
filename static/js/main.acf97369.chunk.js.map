{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","index","indexOf","splice","clearGoods","showSelectedGoods","length","selectedGoodsAsString","slice","join","lastSelectedGood","this","className","map","classNames","active","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAAAJ,GACZ,IAAMM,EAAQN,EAAMC,cAAcM,QAAQJ,GAI1C,OAFAH,EAAMC,cAAcO,OAAOF,EAAO,GAE3B,CACLL,cAAeD,EAAMC,mB,EAK3BQ,WAAa,WACX,EAAKL,SAAS,CACZH,cAAe,M,EAInBS,kBAAoB,WAClB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,QACE,IAAMW,EAAwBX,EAAcY,MAAM,GAAI,GAAGC,KAAK,MACxDC,EAAmBd,EAAcA,EAAcU,OAAS,GAE9D,MAAM,GAAN,OAAUC,EAAV,gBAAuCG,EAAvC,mB,4CAKN,WAAU,IAAD,OACCd,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBD,KAAKN,sBAC5B,sBAAKO,UAAU,UAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAd,SACGnB,EAAgBoB,KAAI,SAAAf,GAAI,OACvB,qBAEEc,UAAWE,IAAW,aAAc,kBAClC,CAAEC,OAAQnB,EAAcoB,SAASlB,KAHrC,UAKGA,EACA,MACAF,EAAcoB,SAASlB,GAEpB,wBACEmB,KAAK,SACLC,QAAS,kBAAM,EAAKlB,WAAWF,IAC/Bc,UAAU,yBAHZ,oBASA,wBACEK,KAAK,SACLC,QAAS,kBAAM,EAAKrB,QAAQC,IAC5Bc,UAAU,0BAHZ,mBAjBCd,QA4BVF,EAAcU,OAAS,GACtB,qCACE,qDACA,wBACEW,KAAK,SACLC,QAASP,KAAKP,WACdQ,UAAU,uCAHZ,4B,GA3FIO,IAAMC,WA0GT1B,IC5Hf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.acf97369.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState(state => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(state => {\n      const index = state.selectedGoods.indexOf(good);\n\n      state.selectedGoods.splice(index, 1);\n\n      return {\n        selectedGoods: state.selectedGoods,\n      };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default: {\n        const selectedGoodsAsString = selectedGoods.slice(0, -1).join(', ');\n        const lastSelectedGood = selectedGoods[selectedGoods.length - 1];\n\n        return `${selectedGoodsAsString} and ${lastSelectedGood} are selected`;\n      }\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">{this.showSelectedGoods()}</h1>\n        <div className=\"content\">\n          <h3>Goods:</h3>\n\n          <ul className=\"list list-group\">\n            {goodsFromServer.map(good => (\n              <li\n                key={good}\n                className={classNames('list__item', 'list-group-item',\n                  { active: selectedGoods.includes(good) })}\n              >\n                {good}\n                {'   '}\n                {selectedGoods.includes(good)\n                  ? (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.removeGood(good)}\n                      className=\"btn btn-outline-danger\"\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      onClick={() => this.addGood(good)}\n                      className=\"btn btn-outline-success\"\n                    >\n                      Add\n                    </button>\n                  )}\n              </li>\n            ))}\n          </ul>\n          {selectedGoods.length > 0 && (\n            <>\n              <strong>Clear selection</strong>\n              <button\n                type=\"button\"\n                onClick={this.clearGoods}\n                className=\"btn btn-outline-warning clear-button\"\n              >\n                X\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}